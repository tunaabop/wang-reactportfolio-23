{"ast":null,"code":"import React from'react';// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Navigation(_ref){var currentPage=_ref.currentPage,handlePageChange=_ref.handlePageChange;return/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#home\",onClick:function onClick(){return handlePageChange('Home');}// This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n// If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n,className:currentPage==='Home'?'nav-link active':'nav-link',children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#about\",onClick:function onClick(){return handlePageChange('About');}// Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='About'?'nav-link active':'nav-link',children:\"About\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#blog\",onClick:function onClick(){return handlePageChange('Blog');}// Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Blog'?'nav-link active':'nav-link',children:\"My Projects\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#contact\",onClick:function onClick(){return handlePageChange('Contact');}// Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentPage==='Contact'?'nav-link active':'nav-link',children:\"Contact\"})})]});}export default Navigation;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Navigation","_ref","currentPage","handlePageChange","className","children","href","onClick"],"sources":["/Users/tinaw/Desktop/wang-reactportfolio-23/src/components/Navigation.js"],"sourcesContent":["import React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction Navigation({ currentPage, handlePageChange }) {\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#home\"\n          onClick={() => handlePageChange('Home')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          className={currentPage === 'Home' ? 'nav-link active' : 'nav-link'}\n        >\n          Home\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#about\"\n          onClick={() => handlePageChange('About')}\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n        >\n          About\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#blog\"\n          onClick={() => handlePageChange('Blog')}\n          // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Blog' ? 'nav-link active' : 'nav-link'}\n        >\n          My Projects\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('Contact')}\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default Navigation;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAoC,IAAjC,CAAAC,WAAW,CAAAD,IAAA,CAAXC,WAAW,CAAEC,gBAAgB,CAAAF,IAAA,CAAhBE,gBAAgB,CACjD,mBACEJ,KAAA,OAAIK,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC1BR,IAAA,OAAIO,SAAS,CAAC,UAAU,CAAAC,QAAA,cACtBR,IAAA,MACES,IAAI,CAAC,OAAO,CACZC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,gBAAgB,CAAC,MAAM,CAAC,EACvC;AACA;AAAA,CACAC,SAAS,CAAEF,WAAW,GAAK,MAAM,CAAG,iBAAiB,CAAG,UAAW,CAAAG,QAAA,CACpE,MAED,CAAG,CAAC,CACF,CAAC,cACLR,IAAA,OAAIO,SAAS,CAAC,UAAU,CAAAC,QAAA,cACtBR,IAAA,MACES,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,gBAAgB,CAAC,OAAO,CAAC,EACxC;AAAA,CACAC,SAAS,CAAEF,WAAW,GAAK,OAAO,CAAG,iBAAiB,CAAG,UAAW,CAAAG,QAAA,CACrE,OAED,CAAG,CAAC,CACF,CAAC,cACLR,IAAA,OAAIO,SAAS,CAAC,UAAU,CAAAC,QAAA,cACtBR,IAAA,MACES,IAAI,CAAC,OAAO,CACZC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,gBAAgB,CAAC,MAAM,CAAC,EACvC;AAAA,CACAC,SAAS,CAAEF,WAAW,GAAK,MAAM,CAAG,iBAAiB,CAAG,UAAW,CAAAG,QAAA,CACpE,aAED,CAAG,CAAC,CACF,CAAC,cACLR,IAAA,OAAIO,SAAS,CAAC,UAAU,CAAAC,QAAA,cACtBR,IAAA,MACES,IAAI,CAAC,UAAU,CACfC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,gBAAgB,CAAC,SAAS,CAAC,EAC1C;AAAA,CACAC,SAAS,CAAEF,WAAW,GAAK,SAAS,CAAG,iBAAiB,CAAG,UAAW,CAAAG,QAAA,CACvE,SAED,CAAG,CAAC,CACF,CAAC,EACH,CAAC,CAET,CAEA,cAAe,CAAAL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}